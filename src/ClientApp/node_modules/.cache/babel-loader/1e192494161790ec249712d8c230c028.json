{"ast":null,"code":"import _regeneratorRuntime from\"/home/vlad/Desktop/BackupSaverWeb/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vlad/Desktop/BackupSaverWeb/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/vlad/Desktop/BackupSaverWeb/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{LogTable}from'./LogTable';import'./MakeBackupButton.css';import{Log}from'../Log';export default function MakeBackupButton(){var _useState=useState([new Log(new Date(),\"\")]),_useState2=_slicedToArray(_useState,2),logs=_useState2[0],setLogs=_useState2[1];function onMakeBackupClickedHandler(){return _onMakeBackupClickedHandler.apply(this,arguments);}function _onMakeBackupClickedHandler(){_onMakeBackupClickedHandler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,newLogs,tmpData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('backup');case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;newLogs=data;if(logs.length>1){tmpData=data.filter(function(item){return logs.every(function(log){return log.date!=item.date&&log.message!=item.message;});});newLogs=tmpData.concat(logs).sort(function(prevLog,currentLog){return prevLog.date.valueOf()-currentLog.date.valueOf();});}setLogs(newLogs);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);alert('Приложение завершило работу с ошибкой: '+_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return _onMakeBackupClickedHandler.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:onMakeBackupClickedHandler},\"Make Backup Now\")),/*#__PURE__*/React.createElement(\"h1\",null,\"Logs\"),/*#__PURE__*/React.createElement(\"div\",{className:\"logTableDiv\"},/*#__PURE__*/React.createElement(LogTable,{logs:logs})));}","map":{"version":3,"sources":["/home/vlad/Desktop/BackupSaverWeb/ClientApp/src/components/MakeBackupButton.tsx"],"names":["React","useState","LogTable","Log","MakeBackupButton","Date","logs","setLogs","onMakeBackupClickedHandler","fetch","response","json","data","newLogs","length","tmpData","filter","item","every","log","date","message","concat","sort","prevLog","currentLog","valueOf","alert"],"mappings":"meAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,QAAR,KAAuB,YAAvB,CACA,MAAO,wBAAP,CACA,OAASC,GAAT,KAAoB,QAApB,CAEA,cAAe,SAASC,CAAAA,gBAAT,EAAwC,eAE7BH,QAAQ,CAAC,CAAC,GAAIE,CAAAA,GAAJ,CAAQ,GAAIE,CAAAA,IAAJ,EAAR,CAAoB,EAApB,CAAD,CAAD,CAFqB,wCAE9CC,IAF8C,eAExCC,OAFwC,uBAIpCC,CAAAA,0BAJoC,wLAInD,2MAGyCC,CAAAA,KAAK,CAAC,QAAD,CAH9C,QAGcC,QAHd,qCAKkCA,CAAAA,QAAQ,CAACC,IAAT,EALlC,QAKcC,IALd,eAMYC,OANZ,CAM6BD,IAN7B,CAQQ,GAAIN,IAAI,CAACQ,MAAL,CAAc,CAAlB,CAAqB,CACbC,OADa,CACKH,IAAI,CAACI,MAAL,CAAY,SAAAC,IAAI,QAClCX,CAAAA,IAAI,CAACY,KAAL,CAAW,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAYH,IAAI,CAACG,IAAjB,EAAyBD,GAAG,CAACE,OAAJ,EAAeJ,IAAI,CAACI,OAAjD,EAAd,CADkC,EAAhB,CADL,CAIjBR,OAAO,CAAGE,OAAO,CAACO,MAAR,CAAehB,IAAf,EAAqBiB,IAArB,CAA0B,SAACC,OAAD,CAAUC,UAAV,QAChCD,CAAAA,OAAO,CAACJ,IAAR,CAAaM,OAAb,GAAyBD,UAAU,CAACL,IAAX,CAAgBM,OAAhB,EADO,EAA1B,CAAV,CAEH,CAEDnB,OAAO,CAACM,OAAD,CAAP,CAhBR,iFAkBQc,KAAK,CAAC,qDAAD,CAAL,CAlBR,qEAJmD,6DA0BnD,mBACA,qDACI,4CACI,8BAAQ,OAAO,CAAEnB,0BAAjB,oBADJ,CADJ,cAII,qCAJJ,cAKI,2BAAK,SAAS,CAAC,aAAf,eACI,oBAAC,QAAD,EAAU,IAAI,CAAEF,IAAhB,EADJ,CALJ,CADA,CAWH","sourcesContent":["import React, { useState } from 'react'\nimport {LogTable} from './LogTable';\nimport './MakeBackupButton.css'\nimport { Log } from '../Log';\n\nexport default function MakeBackupButton(): JSX.Element{\n    \n    let [logs, setLogs] = useState([new Log(new Date(), \"\")]);\n\n    async function onMakeBackupClickedHandler(): Promise<void>{\n        \n        try {\n            const response: Response = await fetch('backup');\n\n            const data: Log[] = await response.json() as Log[];\n            let newLogs: Log[] = data;\n\n            if (logs.length > 1) {\n                let tmpData : Log[] = data.filter(item =>\n                    logs.every(log => log.date != item.date && log.message != item.message));\n                \n                newLogs = tmpData.concat(logs).sort((prevLog, currentLog) =>\n                    prevLog.date.valueOf() - currentLog.date.valueOf());\n            }\n\n            setLogs(newLogs);\n        } catch (error) {\n            alert('Приложение завершило работу с ошибкой: ' + error);\n        }\n    }\n\n    return(\n    <>\n        <div>\n            <button onClick={onMakeBackupClickedHandler}>Make Backup Now</button>\n        </div>\n        <h1>Logs</h1>\n        <div className=\"logTableDiv\">\n            <LogTable logs={logs}/>\n        </div>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}